---
version: '1.0'
description: Workflow that backs up the StackStorm MongoDB database
input:
  - path
  - date
  - mongodb_admin_username
  - mongodb_admin_password: "{{ st2kv('system.mongodb.admin_password', decrypt=True) }}"
  - mongodump_timeout
  - retention_days

output:
  - mongodb_dump_archive: '{{ ctx().mongodb_dump_archive }}'

tasks:
  main:
    action: core.noop
    next:
      - when: '{{ succeeded() and (ctx().date) }}'
        do:
          - init
      - when: '{{ succeeded() and (not ctx().date) }}'
        do:
          - date

  date:
    action: core.local
    input:
      cmd: "date +%Y%m%d_%H%M%S"
    next:
      - when: '{{ succeeded() }}'
        publish:
          - date: '{{ result().stdout }}'
        do:
          - init

  init:
    action: core.noop
    next:
      - when: '{{ succeeded() }}'
        publish:
          - mongodb_dump_archive: '{{ ctx().path }}/mongodb_dump_{{ ctx().date }}.gzip.archive'
        do:
          - mkdir_path

  mkdir_path:
    action: core.local_sudo
    input:
      cmd: "mkdir -p '{{ ctx().path }}'"
    next:
      - when: '{{ succeeded() and (not ctx().mongodb_admin_username or not ctx().mongodb_admin_password) }}'
        do:
          - mongodb_backup
      - when: '{{ succeeded() and (ctx().mongodb_admin_username and ctx().mongodb_admin_password) }}'
        do:
          - mongodb_backup_with_auth

  mongodb_backup:
    action: core.local_sudo
    input:
      cwd: '{{ ctx().path }}'
      cmd: "mongodump --quiet --gzip --archive='{{ ctx().mongodb_dump_archive }}'"
      timeout: "{{ ctx().mongodump_timeout }}"
    next:
      - when: '{{ succeeded() }}'
        do:
          - mongodb_delete_old_files

  mongodb_backup_with_auth:
    action: core.local_sudo
    input:
      cwd: '{{ ctx().path }}'
      cmd: "mongodump -u '{{ ctx().mongodb_admin_username }}' -p '{{ ctx().mongodb_admin_password }}' --quiet --gzip --archive='{{ ctx().mongodb_dump_archive }}'"
      timeout: "{{ ctx().mongodump_timeout }}"
    next:
      - when: '{{ succeeded() }}'
        do:
          - mongodb_delete_old_files

  mongodb_delete_old_files:
    action: core.local_sudo
    input:
      cwd: '{{ ctx().path }}'
      cmd: "find . -name 'mongodb_dump_*' -mtime {{ ctx().retention_days }} | xargs --no-run-if-empty rm"
