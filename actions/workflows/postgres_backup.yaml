version: '2.0'

backups.postgres_backup:
  description: Workflow that backs up the StackStorm Postgres databases
  type: direct
  input:
    - path
    - mistral_config
    - date
    
  output:
    postgres_dump_archive: <% $.postgres_dump_archive %>
    
  tasks:

    main:
      action: std.noop
      on-success:
        - read_connection: <% $.date %>
        - date: <% not $.date %>
    
    date:
      action: core.local
      input:
        cmd: date +%Y%m%d_%H%M%S
      publish:
        date: <% task(date).result.stdout %>
      on-success:
        - read_connection

    read_connection:
      action: core.local
      input:
        cmd: grep -E '^connection' <% $.mistral_config %>
      publish:
        postgres_connection: <% task(read_connection).result.stdout.split(' ')[2] %>
        postgres_dump_file: <% $.path %>/postgres_dump_<% $.date %>.sql
        postgres_dump_archive: <% $.path %>/postgres_dump_<% $.date %>.sql.gz
      on-success:
        - mkdir_path

    mkdir_path:
      action: core.local_sudo
      input:
        cmd: mkdir -p <% $.path %>
      on-success:
        - postgres_backup
        
    postgres_backup:
      action: core.local_sudo
      input:
        cmd: pg_dump -f <% $.postgres_dump_file %> <% $.postgres_connection %>
      on-success:
        - postgres_compress

    postgres_compress:
      action: core.local_sudo
      input:
        cmd: gzip <% $.postgres_dump_file %>
    
